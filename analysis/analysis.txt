Hunter Gregory
hlg16

Copy/Paste results from PercolationStats using PercolationDFSFast

simulation data for 20 trials
grid	mean	stddev	time
100		0.593	0.014	0.237
200		0.591	0.010	0.278
400		0.590	0.006	0.967
800		0.594	0.004	7.110

Stack Overflow for rest


Copy/Paste results from PercolationStats using PercolationBFS

simulation data for 20 trials
grid	mean	stddev	time
100		0.593	0.014	0.165
200		0.591	0.010	0.203
400		0.590	0.006	1.069
800		0.594	0.004	6.646
1600	0.592	0.002	33.489
3200	0.593	0.001	207.325


Copy/Paste results from PercolationStats using PercolationUF

simulation data for 20 trials
grid	mean	stddev	time
100		0.283	0.015	0.097
200		0.284	0.009	0.140
400		0.289	0.005	0.681
800		0.290	0.003	4.976
1600	0.289	0.002	22.987
3200	0.289	0.001	119.006


1. How does doubling the grid size affect running time (keeping # trials fixed)

Doubling the grid size quadruples the runtime. 


2. How does doubling the number of trials affect running time.

simulation data for 40 trials
grid	mean	stddev	time
100		0.286	0.014	0.130
200		0.289	0.008	0.233
400		0.289	0.006	1.408
800		0.290	0.003	8.726
1600	0.289	0.001	40.796
3200	0.289	0.001	239.228

Doubling the amount of trials doubles the runtime.


3. Estimate the largest grid size you can run in 24 hours with 20 trials. Explain your reasoning.

The answers to the last two questions suggest that the runtime of PercolationUF is O(T*N^2), where
T is the number of trials and N is the grid size.

Take the first simulated datum for PercolationUF, grid size = 100, trials = 20.
Round this runtime to 0.1 seconds.
24 hours = 86,400 seconds

We can find the approximate largest grid size that can run in 24 hours with 20 trials by solving this equation:
	grid size = 100 * k --> runtime = 0.1 * k^2

